"""Initial migration

Revision ID: e186d7e75090
Revises: 
Create Date: 2025-09-08 10:08:18.547116

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e186d7e75090'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('accounts',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('account_number', sa.String(), nullable=False),
    sa.Column('account_name', sa.String(), nullable=False),
    sa.Column('account_type', sa.Enum('CHECKING', 'SAVINGS', 'INVESTMENT', 'CREDIT', 'BUSINESS', name='accounttypeenum'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPENDED', 'CLOSED', 'PENDING', name='accountstatusenum'), nullable=True),
    sa.Column('current_balance', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('available_balance', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('pending_balance', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('reserved_balance', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('overdraft_limit', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('is_overdraft_enabled', sa.Boolean(), nullable=True),
    sa.Column('minimum_balance', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('interest_rate', sa.DECIMAL(precision=5, scale=4), nullable=True),
    sa.Column('monthly_fee', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('opening_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_statement_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('routing_number', sa.String(), nullable=True),
    sa.Column('swift_code', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_accounts_account_number'), 'accounts', ['account_number'], unique=True)
    op.create_index(op.f('ix_accounts_user_id'), 'accounts', ['user_id'], unique=False)
    op.create_table('p2p_transactions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('sender_id', sa.String(), nullable=False),
    sa.Column('recipient_id', sa.String(), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('requested_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_p2p_transactions_recipient_id'), 'p2p_transactions', ['recipient_id'], unique=False)
    op.create_index(op.f('ix_p2p_transactions_sender_id'), 'p2p_transactions', ['sender_id'], unique=False)
    op.create_table('cards',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('account_id', sa.String(), nullable=False),
    sa.Column('card_number_masked', sa.String(), nullable=False),
    sa.Column('card_type', sa.Enum('DEBIT', 'CREDIT', 'PREPAID', name='cardtypeenum'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'BLOCKED', 'EXPIRED', 'CANCELLED', name='cardstatusenum'), nullable=True),
    sa.Column('cardholder_name', sa.String(), nullable=False),
    sa.Column('expiry_month', sa.Integer(), nullable=False),
    sa.Column('expiry_year', sa.Integer(), nullable=False),
    sa.Column('daily_limit', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('monthly_limit', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('is_contactless_enabled', sa.Boolean(), nullable=True),
    sa.Column('is_online_enabled', sa.Boolean(), nullable=True),
    sa.Column('is_international_enabled', sa.Boolean(), nullable=True),
    sa.Column('pin_set', sa.Boolean(), nullable=True),
    sa.Column('failed_pin_attempts', sa.Integer(), nullable=True),
    sa.Column('last_used_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('issued_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('activation_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cards_account_id'), 'cards', ['account_id'], unique=False)
    op.create_index(op.f('ix_cards_user_id'), 'cards', ['user_id'], unique=False)
    op.create_table('investments',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('account_id', sa.String(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('investment_type', sa.String(), nullable=False),
    sa.Column('quantity', sa.DECIMAL(precision=15, scale=6), nullable=False),
    sa.Column('purchase_price', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('current_price', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('purchase_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_investments_account_id'), 'investments', ['account_id'], unique=False)
    op.create_index(op.f('ix_investments_user_id'), 'investments', ['user_id'], unique=False)
    op.create_table('transfers',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('from_account_id', sa.String(), nullable=False),
    sa.Column('to_account_id', sa.String(), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('reference_number', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('fee_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('requested_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processed_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['from_account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['to_account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transfers_user_id'), 'transfers', ['user_id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('account_id', sa.String(), nullable=False),
    sa.Column('transaction_type', sa.Enum('DEPOSIT', 'WITHDRAWAL', 'TRANSFER_IN', 'TRANSFER_OUT', 'PAYMENT', 'REFUND', 'FEE', 'INTEREST', 'DIVIDEND', 'PURCHASE', 'SALE', 'ATM_WITHDRAWAL', 'CARD_PAYMENT', 'MOBILE_PAYMENT', 'BILL_PAYMENT', 'SALARY', 'LOAN_PAYMENT', 'INVESTMENT', 'OTHER', name='transactiontypeenum'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', 'REVERSED', name='transactionstatusenum'), nullable=False),
    sa.Column('direction', sa.Enum('INBOUND', 'OUTBOUND', name='transactiondirectionenum'), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('exchange_rate', sa.DECIMAL(precision=10, scale=6), nullable=True),
    sa.Column('original_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('original_currency', sa.String(length=3), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('merchant_name', sa.String(), nullable=True),
    sa.Column('merchant_category', sa.Enum('GROCERIES', 'RESTAURANTS', 'GAS_STATIONS', 'RETAIL', 'ENTERTAINMENT', 'TRAVEL', 'HEALTHCARE', 'UTILITIES', 'EDUCATION', 'AUTOMOTIVE', 'HOME_IMPROVEMENT', 'INSURANCE', 'PROFESSIONAL_SERVICES', 'GOVERNMENT', 'CHARITY', 'ONLINE_SERVICES', 'SUBSCRIPTION', 'ATM_FEE', 'BANK_FEE', 'TRANSFER', 'INVESTMENT_TRADE', 'CASH_ADVANCE', 'OTHER', name='merchantcategoryenum'), nullable=True),
    sa.Column('payment_method', sa.Enum('CARD', 'BANK_TRANSFER', 'MOBILE_MONEY', 'CASH', 'CHECK', 'WIRE', 'ACH', 'CRYPTO', 'OTHER', name='paymentmethodenum'), nullable=False),
    sa.Column('card_id', sa.String(), nullable=True),
    sa.Column('reference_number', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('transaction_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('posted_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('fee_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('balance_after', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('is_disputed', sa.Boolean(), nullable=True),
    sa.Column('is_fraudulent', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['card_id'], ['cards.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_account_id'), 'transactions', ['account_id'], unique=False)
    op.create_index(op.f('ix_transactions_user_id'), 'transactions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transactions_user_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_account_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_transfers_user_id'), table_name='transfers')
    op.drop_table('transfers')
    op.drop_index(op.f('ix_investments_user_id'), table_name='investments')
    op.drop_index(op.f('ix_investments_account_id'), table_name='investments')
    op.drop_table('investments')
    op.drop_index(op.f('ix_cards_user_id'), table_name='cards')
    op.drop_index(op.f('ix_cards_account_id'), table_name='cards')
    op.drop_table('cards')
    op.drop_index(op.f('ix_p2p_transactions_sender_id'), table_name='p2p_transactions')
    op.drop_index(op.f('ix_p2p_transactions_recipient_id'), table_name='p2p_transactions')
    op.drop_table('p2p_transactions')
    op.drop_index(op.f('ix_accounts_user_id'), table_name='accounts')
    op.drop_index(op.f('ix_accounts_account_number'), table_name='accounts')
    op.drop_table('accounts')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
